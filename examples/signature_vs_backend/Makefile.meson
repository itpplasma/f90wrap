include ../make.meson.inc

NAME     := pywrapper
MOD_PREFIX  = _${NAME}_sign
MAKEFILE := $(lastword $(MAKEFILE_LIST))
SIGNATURES	= _signatures

${SIGNATURES}: ${LIBSRC_WRAP_FILES}
	@for SUFFIX in f2py_f90wrap_distutils f2py_f90wrap_meson f2py_distutils f2py_meson; do \
		f2py ${LIBSRC_WRAP_FILES} -m ${MOD_PREFIX}_$$SUFFIX -h ${SIGNATURES}_$$SUFFIX.pyf; \
	done

#extension: f2py-f90wrap-distutils f2py-f90wrap-meson f2py-distutils f2py-meson
extension: f2py-f90wrap-distutils
	@echo "Bypass extention template"

f2py-f90wrap-distutils: ${SIGNATURES}
	@SUFFIX=f2py_f90wrap_distutils; \
	CFLAGS="${CFLAGS}" f2py-f90wrap -c -m ${MOD_PREFIX}_$$SUFFIX --build-dir build_dir_$$SUFFIX --backend distutils ${LINK} ${SIGNATURES}_$$SUFFIX.pyf

f2py-f90wrap-meson: ${SIGNATURES}
	@SUFFIX=f2py_f90wrap_meson; \
	CFLAGS="${CFLAGS}" f2py-f90wrap -c -m ${MOD_PREFIX}_$$SUFFIX --build-dir build_dir_$$SUFFIX --backend meson ${LINK} ${SIGNATURES}_$$SUFFIX.pyf

f2py-distutils: ${SIGNATURES}
	@SUFFIX=f2py_distutils; \
	CFLAGS="${CFLAGS}" f2py -c -m ${MOD_PREFIX}_$$SUFFIX --build-dir build_dir_$$SUFFIX --backend distutils ${LINK} ${SIGNATURES}_$$SUFFIX.pyf

f2py-meson: ${SIGNATURES}
	@SUFFIX=f2py_meson; \
	CFLAGS="${CFLAGS}" f2py -c -m ${MOD_PREFIX}_$$SUFFIX --build-dir build_dir_$$SUFFIX --backend meson ${LINK} ${SIGNATURES}_$$SUFFIX.pyf


clean:
	-rm -f f90wrap_*.f90 *.o *.mod *.fpp *.a
	-rm -rf src.*/ .f2py_f2cmap .libs/ __pycache__/
	-rm -rf _${NAME}* ${NAME}*/ ${NAME}.py
	-rm -rf _build_dir/
	-rm -rf build_dir_*/
	-rm -f meson.build*
	-rm -f ${SIGNATURES}*.pyf

build: extension
	@echo 'Using via meson...'
	@cp ../meson.build.template meson.build
	${SEDI} "s@\$${source}@'${LIBSRC_WRAP_FILES}'@" meson.build
	for item in ${F90FLAGS}; do \
		${SEDI} ${SEDA} meson.build; done

	@for SUFFIX in f2py_f90wrap_distutils f2py_f90wrap_meson f2py_distutils f2py_meson; do \
		NAME=${MOD_PREFIX}_$$SUFFIX; \
		${SEDI} "s/\$${name}/'_$$NAME'/" meson.build; \
		echo 'Running setup'; \
		meson setup --wipe _build_dir; \
		echo 'Running Compile'; \
		meson compile -C _build_dir; \
	done




test-f2py-distutils: build
	${PYTHON} tests_common.py
    # This document what seems to be a limitation in f2py
	${PYTHON} tests_f2py_distutils.py

test-f2py-meson: build
    # This document what seems to be a limitation in f2py
	${PYTHON} tests_f2py_meson.py

test-f2py-f90wrap-distutils: build
# 	${PYTHON} tests_common.py
    # The limitation present in f2py does not appear when using f2py-f90wrap
	${PYTHON} tests_f2py_f90wrap_distutils.py

test-f2py-f90wrap-meson: build
	${PYTHON} tests_common.py
    # The limitation present in f2py does not appear when using f2py-f90wrap
	${PYTHON} tests_f2py_f90wrap_meson.py

test: build
	# distutils backend is not available with Python >= 3.12
	@if ${PYTHON}  -c "import sys; exit(0 if sys.version_info < (3,12) else 1)"; then \
		$(MAKE) test-f2py-f90wrap-distutils; \
	fi
	$(MAKE) test-f2py-f90wrap-meson
	# distutils backend is not available with Python >= 3.12
	@if ${PYTHON}  -c "import sys; exit(0 if sys.version_info < (3,12) else 1)"; then \
		$(MAKE) test-f2py-distutils; \
	fi
	$(MAKE) test-f2py-meson
